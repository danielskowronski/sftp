name: Build and Publish to Docker

on:
  schedule:
    - cron: "0 12 * * *"
  push:
    paths-ignore:
      - "*.md"
      - "*.txt"
      - "*.png"
    branches:
      - "master"
  pull_request:
    branches:
      - "master"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # for proper signature verification
          submodules: true # for shunit2
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master
        with:
          ignore_paths: tests/shunit2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build Debian Image
        uses: docker/build-push-action@v3
        with:
          context: .
          load: true
          tags: |
            ${{ github.repository }}:latest
            ${{ github.repository }}:debian
          labels: |
            org.opencontainers.image.source=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY
            org.opencontainers.image.revision=$GITHUB_SHA
            org.opencontainers.image.created=$(date --rfc-3339=seconds)
      - name: Test Debian Image
        run: tests/run ${{ github.repository }}:debian
      - name: Push Debian Image
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ github.repository }}:latest
            ${{ github.repository }}:debian
          labels: |
            org.opencontainers.image.source=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY
            org.opencontainers.image.revision=$GITHUB_SHA
            org.opencontainers.image.created=$(date --rfc-3339=seconds)
      # - name: Build alpine image
      #   run: |
      #     docker build . \
      #       --pull=true \
      #       --file=Dockerfile-alpine \
      #       --tag="${{ github.repository }}:alpine" \
      #       --label="org.opencontainers.image.source=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY" \
      #       --label="org.opencontainers.image.revision=$GITHUB_SHA" \
      #       --label="org.opencontainers.image.created=$(date --rfc-3339=seconds)"

      # - name: Test alpine image
      #   run: tests/run ${{ github.repository }}:alpine

      # - name: Verify signature
      #   if: github.ref == 'refs/heads/master'
      #   uses: atmoz/git-verify-ref@master
      #   with:
      #     import-github-users: atmoz

      # - name: Push images to Docker Hub registry
      #   if: github.ref == 'refs/heads/master'
      #   run: |
      #     echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login \
      #       -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      #     docker push --all-tags ${{ github.repository }}
      #     docker logout

      # - name: Push images to GitHub registry
      #   if: github.ref == 'refs/heads/master'
      #   run: |
      #     echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com \
      #       -u ${{ github.actor }} --password-stdin

      #     TAG_DEBIAN=docker.pkg.github.com/$GITHUB_REPOSITORY/debian
      #     TAG_ALPINE=docker.pkg.github.com/$GITHUB_REPOSITORY/alpine
      #     docker tag ${{ github.repository }}:debian $TAG_DEBIAN
      #     docker tag ${{ github.repository }}:alpine $TAG_ALPINE
      #     docker push $TAG_DEBIAN
      #     docker push $TAG_ALPINE
      #     docker logout docker.pkg.github.com
